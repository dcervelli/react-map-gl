{"version":3,"sources":["../../../src/components/popup.js"],"names":["createElement","PropTypes","BaseControl","getDynamicPosition","ANCHOR_POSITION","propTypes","Object","assign","className","string","longitude","number","isRequired","latitude","offsetLeft","offsetTop","tipSize","closeButton","bool","closeOnClick","anchor","oneOf","keys","dynamicPosition","onClose","func","defaultProps","Popup","constructor","props","evt","captureClick","stopPropagation","_closeOnClick","ref","_content","componentDidMount","forceUpdate","_getPosition","x","y","viewport","context","padding","width","height","selfWidth","clientWidth","selfHeight","clientHeight","_renderTip","key","style","borderWidth","_renderContent","children","_contentLoaded","type","onClick","_onClose","render","project","positionType","anchorPosition","containerStyle","position","left","top","transform","_onContainerLoad","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport {getDynamicPosition, ANCHOR_POSITION} from '../utils/dynamic-position';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number,\n  // Size of the tip\n  tipSize: PropTypes.number,\n  // Whether to show close button\n  closeButton: PropTypes.bool,\n  // Whether to close on click\n  closeOnClick: PropTypes.bool,\n  // The popup's location relative to the coordinate\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  // Whether the popup anchor should be auto-adjusted to fit within the container\n  dynamicPosition: PropTypes.bool,\n  // Callback when component is closed\n  onClose: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: () => {}\n});\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the popup's position when the parent re-renders.\n */\nexport default class Popup extends BaseControl {\n\n  constructor(props) {\n    super(props);\n\n    this._closeOnClick = false;\n  }\n\n  componentDidMount() {\n    // Container just got a size, re-calculate position\n    this.forceUpdate();\n  }\n\n  _getPosition(x, y) {\n    const {viewport} = this.context;\n    const {anchor, dynamicPosition, tipSize} = this.props;\n\n    if (this._content) {\n      return dynamicPosition ? getDynamicPosition({\n        x, y, anchor,\n        padding: tipSize,\n        width: viewport.width,\n        height: viewport.height,\n        selfWidth: this._content.clientWidth,\n        selfHeight: this._content.clientHeight\n      }) : anchor;\n    }\n\n    return anchor;\n  }\n\n  /*\n   * Hack -\n   * React's `onClick` is called before mjolnir.js' `click` event (aka `tap` from hammer.js)\n   * which has a configurable delay.\n   * If we close the popup on the React event, by the time `click` fires, this component will\n   * have been unmounted, thus `captureClick` will not work.\n   * Instead, we flag the popup as closed on the React event, and actually close it on the hammer.js\n   * event.\n   */\n  _onClick = (evt) => {\n    if (this.props.captureClick) {\n      evt.stopPropagation();\n    }\n\n    if (this.props.closeOnClick || this._closeOnClick) {\n      this.props.onClose();\n    }\n  }\n\n  _onClose = () => {\n    this._closeOnClick = true;\n  }\n\n  _contentLoaded = (ref) => {\n    this._content = ref;\n  }\n\n  _renderTip() {\n    const {tipSize} = this.props;\n\n    return createElement('div', {\n      key: 'tip',\n      className: 'mapboxgl-popup-tip',\n      style: {borderWidth: tipSize}\n    });\n  }\n\n  _renderContent() {\n    const {closeButton, children} = this.props;\n    return createElement('div', {\n      key: 'content',\n      ref: this._contentLoaded,\n      className: 'mapboxgl-popup-content'\n    }, [\n      closeButton && createElement('button', {\n        key: 'close-button',\n        className: 'mapboxgl-popup-close-button',\n        type: 'button',\n        onClick: this._onClose\n      }, 'Ã—'),\n      children\n    ]);\n  }\n\n  render() {\n    const {className, longitude, latitude, offsetLeft, offsetTop} = this.props;\n\n    const [x, y] = this.context.viewport.project([longitude, latitude]);\n\n    const positionType = this._getPosition(x, y);\n    const anchorPosition = ANCHOR_POSITION[positionType];\n\n    const containerStyle = {\n      position: 'absolute',\n      left: x + offsetLeft,\n      top: y + offsetTop,\n      transform: `translate(${-anchorPosition.x * 100}%, ${-anchorPosition.y * 100}%)`\n    };\n\n    return createElement('div', {\n      className: `mapboxgl-popup mapboxgl-popup-anchor-${positionType} ${className}`,\n      style: containerStyle,\n      ref: this._onContainerLoad\n    }, [\n      this._renderTip(),\n      this._renderContent()\n    ]);\n  }\n\n}\n\nPopup.displayName = 'Popup';\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\n"],"file":"popup.js"}