{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["assert","TransitionInterpolator","isValid","lerp","getEndValueByShortestPath","VIEWPORT_TRANSITION_PROPS","LinearInterpolator","constructor","transitionProps","propNames","initializeProps","startProps","endProps","startViewportProps","endViewportProps","key","startValue","endValue","start","end","interpolateProps","t","viewport"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AAEA,SAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,yBAAvB,QAAuD,oBAAvD;AAEA,MAAMC,yBAAyB,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,OAA7C,CAAlC;AAEA;;;;AAGA,eAAe,MAAMC,kBAAN,SAAiCL,sBAAjC,CAAwD;AAErE;;;AAGAM,EAAAA,WAAW,CAACC,eAAe,GAAGH,yBAAnB,EAA8C;AACvD;AACA,SAAKI,SAAL,GAAiBD,eAAjB;AACD;;AAEDE,EAAAA,eAAe,CAACC,UAAD,EAAaC,QAAb,EAAuB;AACpC,UAAMC,kBAAkB,GAAG,EAA3B;AACA,UAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAAK,MAAMC,GAAX,IAAkB,KAAKN,SAAvB,EAAkC;AAChC,YAAMO,UAAU,GAAGL,UAAU,CAACI,GAAD,CAA7B;AACA,YAAME,QAAQ,GAAGL,QAAQ,CAACG,GAAD,CAAzB;AACAf,MAAAA,MAAM,CAACE,OAAO,CAACc,UAAD,CAAP,IAAuBd,OAAO,CAACe,QAAD,CAA/B,EAA4C,GAAEF,GAAI,kCAAlD,CAAN;AAEAF,MAAAA,kBAAkB,CAACE,GAAD,CAAlB,GAA0BC,UAA1B;AACAF,MAAAA,gBAAgB,CAACC,GAAD,CAAhB,GAAwBX,yBAAyB,CAACW,GAAD,EAAMC,UAAN,EAAkBC,QAAlB,CAAjD;AACD;;AAED,WAAO;AACLC,MAAAA,KAAK,EAAEL,kBADF;AAELM,MAAAA,GAAG,EAAEL;AAFA,KAAP;AAID;;AAEDM,EAAAA,gBAAgB,CAACT,UAAD,EAAaC,QAAb,EAAuBS,CAAvB,EAA0B;AACxC,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,MAAMP,GAAX,IAAkB,KAAKN,SAAvB,EAAkC;AAChCa,MAAAA,QAAQ,CAACP,GAAD,CAAR,GAAgBZ,IAAI,CAACQ,UAAU,CAACI,GAAD,CAAX,EAAkBH,QAAQ,CAACG,GAAD,CAA1B,EAAiCM,CAAjC,CAApB;AACD;;AACD,WAAOC,QAAP;AACD;;AAnCoE","sourcesContent":["import assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, lerp, getEndValueByShortestPath} from './transition-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two viewports.\n*/\nexport default class LinearInterpolator extends TransitionInterpolator {\n\n  /**\n   * @param {Array} transitionProps - list of props to apply linear transition to.\n   */\n  constructor(transitionProps = VIEWPORT_TRANSITION_PROPS) {\n    super();\n    this.propNames = transitionProps;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n    return viewport;\n  }\n\n}\n"],"file":"linear-interpolator.js"}