{"version":3,"sources":["../../../src/overlays/canvas-overlay.js"],"names":["propTypes","Object","assign","BaseControl","redraw","PropTypes","func","isRequired","defaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","CanvasOverlay","props","pixelRatio","window","devicePixelRatio","canvas","_canvas","ctx","getContext","save","scale","context","viewport","isDragging","width","height","project","bind","unproject","restore","ref","_onContainerLoad","_redraw","_canvasLoaded","style","position","left","top","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAoBA;;AACA;;AACA;;AACA;;AAvBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,IAAMA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,qBAAYH,SAA9B,EAAyC;AACzDI,EAAAA,MAAM,EAAEC,mBAAUC,IAAV,CAAeC;AADkC,CAAzC,CAAlB;AAIA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,YAAY,EAAE,KAHK;AAInBC,EAAAA,kBAAkB,EAAE;AAJD,CAArB;;IAOqBC,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,mHAAMA,KAAN;AADiB,gIAYT,YAAM;AACd,UAAMC,UAAU,GAAGC,gBAAOC,gBAAP,IAA2B,CAA9C;AACA,UAAMC,MAAM,GAAG,MAAKC,OAApB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ;AACAF,MAAAA,GAAG,CAACG,KAAJ,CAAUR,UAAV,EAAsBA,UAAtB;AALc,0BAOiB,MAAKS,OAPtB;AAAA,UAOPC,QAPO,iBAOPA,QAPO;AAAA,UAOGC,UAPH,iBAOGA,UAPH;;AAQd,YAAKZ,KAAL,CAAWV,MAAX,CAAkB;AAChBuB,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KADA;AAEhBC,QAAAA,MAAM,EAAEH,QAAQ,CAACG,MAFD;AAGhBR,QAAAA,GAAG,EAAHA,GAHgB;AAIhBM,QAAAA,UAAU,EAAVA,UAJgB;AAKhBG,QAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAAT,CAAiBC,IAAjB,CAAsBL,QAAtB,CALO;AAMhBM,QAAAA,SAAS,EAAEN,QAAQ,CAACM,SAAT,CAAmBD,IAAnB,CAAwBL,QAAxB;AANK,OAAlB;;AASAL,MAAAA,GAAG,CAACY,OAAJ;AACD,KA9BkB;AAAA,sIAgCH,UAACC,GAAD,EAAS;AACvB,YAAKd,OAAL,GAAec,GAAf;;AACA,YAAKC,gBAAL,CAAsBD,GAAtB;AACD,KAnCkB;AAAA;AAElB;;;;wCAEmB;AAClB,WAAKE,OAAL;AACD;;;yCAEoB;AACnB,WAAKA,OAAL;AACD;;;6BA2BQ;AACP,UAAMpB,UAAU,GAAGC,gBAAOC,gBAAP,IAA2B,CAA9C;AADO,kCAE6B,KAAKO,OAFlC,CAEAC,QAFA;AAAA,UAEWE,KAFX,yBAEWA,KAFX;AAAA,UAEkBC,MAFlB,yBAEkBA,MAFlB;AAIP,aACE,0BAAc,QAAd,EAAwB;AACtBK,QAAAA,GAAG,EAAE,KAAKG,aADY;AAEtBT,QAAAA,KAAK,EAAEA,KAAK,GAAGZ,UAFO;AAGtBa,QAAAA,MAAM,EAAEA,MAAM,GAAGb,UAHK;AAItBsB,QAAAA,KAAK,EAAE;AACLV,UAAAA,KAAK,YAAKA,KAAL,OADA;AAELC,UAAAA,MAAM,YAAKA,MAAL,OAFD;AAGLU,UAAAA,QAAQ,EAAE,UAHL;AAILC,UAAAA,IAAI,EAAE,CAJD;AAKLC,UAAAA,GAAG,EAAE;AALA;AAJe,OAAxB,CADF;AAcD;;;EAxDwCrC,oB;;;AA2D3CU,aAAa,CAAC4B,WAAd,GAA4B,eAA5B;AACA5B,aAAa,CAACb,SAAd,GAA0BA,SAA1B;AACAa,aAAa,CAACL,YAAd,GAA6BA,YAA7B","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from '../components/base-control';\nimport {window} from '../utils/globals';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  redraw: PropTypes.func.isRequired\n});\n\nconst defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false\n};\n\nexport default class CanvasOverlay extends BaseControl {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this._redraw();\n  }\n\n  componentDidUpdate() {\n    this._redraw();\n  }\n\n  _redraw = () => {\n    const pixelRatio = window.devicePixelRatio || 1;\n    const canvas = this._canvas;\n    const ctx = canvas.getContext('2d');\n    ctx.save();\n    ctx.scale(pixelRatio, pixelRatio);\n\n    const {viewport, isDragging} = this.context;\n    this.props.redraw({\n      width: viewport.width,\n      height: viewport.height,\n      ctx,\n      isDragging,\n      project: viewport.project.bind(viewport),\n      unproject: viewport.unproject.bind(viewport)\n    });\n\n    ctx.restore();\n  }\n\n  _canvasLoaded = (ref) => {\n    this._canvas = ref;\n    this._onContainerLoad(ref);\n  }\n\n  render() {\n    const pixelRatio = window.devicePixelRatio || 1;\n    const {viewport: {width, height}} = this.context;\n\n    return (\n      createElement('canvas', {\n        ref: this._canvasLoaded,\n        width: width * pixelRatio,\n        height: height * pixelRatio,\n        style: {\n          width: `${width}px`,\n          height: `${height}px`,\n          position: 'absolute',\n          left: 0,\n          top: 0\n        }\n      })\n    );\n  }\n}\n\nCanvasOverlay.displayName = 'CanvasOverlay';\nCanvasOverlay.propTypes = propTypes;\nCanvasOverlay.defaultProps = defaultProps;\n"],"file":"canvas-overlay.js"}