{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["propTypes","Object","assign","StaticMap","maxZoom","PropTypes","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onContextMenu","touchAction","string","clickRadius","getCursor","mapControls","shape","events","arrayOf","handleEvent","getDefaultCursor","isDragging","isHovering","config","CURSOR","GRABBING","POINTER","GRAB","defaultProps","MAPBOX_LIMITS","TransitionManager","event","preventDefault","childContextTypes","viewport","instanceOf","WebMercatorViewport","eventManager","InteractiveMap","supported","props","_map","getMap","geometry","options","queryRenderedFeatures","interactionState","state","setState","viewState","oldViewState","onChangeViewport","pos","_getPos","features","_getFeatures","radius","length","lngLat","unproject","ref","_eventManager","setElement","_mapControls","MapControls","EventManager","legacyBlockScroll","_updateQueryParams","mapStyle","on","mousemove","_onMouseMove","click","_onMouseClick","contextmenu","_onContextMenu","_setControllerProps","nextProps","isInteractive","Boolean","_onViewportChange","onStateChange","_onInteractionStateChange","setOptions","size","bbox","_queryParams","interactiveLayerIds","layers","offsetCenter","x","y","width","height","eventCanvasStyle","position","cursor","key","_eventCanvasLoaded","style","_staticMapLoaded","children","PureComponent","displayName"],"mappings":"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","sourcesContent":["import {PureComponent, createElement} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\nimport {getInteractiveLayerIds} from '../utils/style-utils';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapControls from '../utils/map-controls';\nimport config from '../config';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.number,\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n /**\n    * Called when the map is hovered over.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onHover: PropTypes.func,\n  /**\n    * Called when the map is clicked.\n    * @callback\n    * @param {Object} event - The mouse event.\n    * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n    * @param {Array} event.features - The features under the pointer, using Mapbox's\n    * queryRenderedFeatures API:\n    * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n    * To make a layer interactive, set the `interactive` property in the\n    * layer style to `true`. See Mapbox's style spec\n    * https://www.mapbox.com/mapbox-gl-style-spec/#layer-interactive\n    */\n  onClick: PropTypes.func,\n  /**\n    * Called when the context menu is activated.\n    */\n  onContextMenu: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controls\n  // The object must expose one property: `events` as an array of subscribed\n  // event names; and two methods: `setState(state)` and `handle(event)`\n  mapControls: PropTypes.shape({\n    events: PropTypes.arrayOf(PropTypes.string),\n    handleEvent: PropTypes.func\n  })\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) => isDragging ?\n  config.CURSOR.GRABBING :\n  (isHovering ? config.CURSOR.POINTER : config.CURSOR.GRAB);\n\nconst defaultProps = Object.assign({},\n  StaticMap.defaultProps, MAPBOX_LIMITS, TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\nconst childContextTypes = {\n  viewport: PropTypes.instanceOf(WebMercatorViewport),\n  isDragging: PropTypes.bool,\n  eventManager: PropTypes.object\n};\n\nexport default class InteractiveMap extends PureComponent {\n\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  constructor(props) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    this.state = {\n      // Whether the cursor is down\n      isDragging: false,\n      // Whether the cursor is over a clickable feature\n      isHovering: false\n    };\n\n    // If props.mapControls is not provided, fallback to default MapControls instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._mapControls = props.mapControls || new MapControls();\n\n    this._eventManager = new EventManager(null, {\n      legacyBlockScroll: false,\n      touchAction: props.touchAction\n    });\n\n    this._updateQueryParams(props.mapStyle);\n  }\n\n  getChildContext() {\n    return {\n      viewport: new WebMercatorViewport(this.props),\n      isDragging: this.state.isDragging,\n      eventManager: this._eventManager\n    };\n  }\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      mousemove: this._onMouseMove,\n      click: this._onMouseClick,\n      contextmenu: this._onContextMenu\n    });\n\n    this._setControllerProps(this.props);\n  }\n\n  componentWillUpdate(nextProps) {\n    if (this.props.mapStyle !== nextProps.mapStyle) {\n      this._updateQueryParams(nextProps.mapStyle);\n    }\n\n    this._setControllerProps(nextProps);\n  }\n\n  getMap = () => {\n    return this._map ? this._map.getMap() : null;\n  }\n\n  queryRenderedFeatures = (geometry, options) => {\n    return this._map.queryRenderedFeatures(geometry, options);\n  }\n\n  _setControllerProps(props) {\n    props = Object.assign({}, props, props.viewState, {\n      isInteractive: Boolean(props.onViewStateChange ||\n        props.onViewportChange || props.onChangeViewport),\n      onViewportChange: this._onViewportChange,\n      onStateChange: this._onInteractionStateChange,\n      eventManager: this._eventManager\n    });\n\n    this._mapControls.setOptions(props);\n  }\n\n  _getFeatures({pos, radius}) {\n    let features;\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = this._map.queryRenderedFeatures(bbox, this._queryParams);\n    } else {\n      features = this._map.queryRenderedFeatures(pos, this._queryParams);\n    }\n    return features;\n  }\n\n  // Hover and click only query layers whose interactive property is true\n  _updateQueryParams(mapStyle) {\n    const interactiveLayerIds = getInteractiveLayerIds(mapStyle);\n    this._queryParams = {layers: interactiveLayerIds};\n  }\n\n  _onInteractionStateChange = (interactionState) => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== this.state.isDragging) {\n      this.setState({isDragging});\n    }\n\n    const {onInteractionStateChange} = this.props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  }\n\n  _onViewportChange = (viewState, interactionState, oldViewState) => {\n    const onViewStateChange = this.props.onViewStateChange;\n    const onViewportChange = this.props.onViewportChange || this.props.onChangeViewport;\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  }\n\n  // HOVER AND CLICK\n  _getPos(event) {\n    const {offsetCenter: {x, y}} = event;\n    return [x, y];\n  }\n\n  _onMouseMove = (event) => {\n    if (!this.state.isDragging) {\n      const pos = this._getPos(event);\n      const features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      const isHovering = features && features.length > 0;\n      if (isHovering !== this.state.isHovering) {\n        this.setState({isHovering});\n      }\n\n      if (this.props.onHover) {\n        const viewport = new WebMercatorViewport(this.props);\n        event.lngLat = viewport.unproject(pos);\n        event.features = features;\n\n        this.props.onHover(event);\n      }\n    }\n  }\n\n  _onMouseClick = (event) => {\n    if (this.props.onClick) {\n      const pos = this._getPos(event);\n      const viewport = new WebMercatorViewport(this.props);\n      event.lngLat = viewport.unproject(pos);\n      event.features = this._getFeatures({pos, radius: this.props.clickRadius});\n\n      this.props.onClick(event);\n    }\n  }\n\n  _onContextMenu = (event) => {\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(event);\n    }\n  }\n\n  _eventCanvasLoaded = (ref) => {\n    // This will be called with `null` after unmount, releasing event manager resource\n    this._eventManager.setElement(ref);\n  }\n\n  _staticMapLoaded = (ref) => {\n    this._map = ref;\n  }\n\n  render() {\n    const {width, height, getCursor} = this.props;\n\n    const eventCanvasStyle = {\n      width,\n      height,\n      position: 'relative',\n      cursor: getCursor(this.state)\n    };\n\n    return (\n      createElement('div', {\n        key: 'map-controls',\n        ref: this._eventCanvasLoaded,\n        style: eventCanvasStyle\n      },\n        createElement(StaticMap, Object.assign({}, this.props,\n          {\n            ref: this._staticMapLoaded,\n            children: this.props.children\n          }\n        ))\n      )\n    );\n  }\n}\n\nInteractiveMap.displayName = 'InteractiveMap';\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\nInteractiveMap.childContextTypes = childContextTypes;\n"],"file":"interactive-map.js"}